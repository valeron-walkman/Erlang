% задание 10(p10) запаковываем последовательно следующие дубликаты во вложеные списки

-module(p10).
-export([encode/1]).


% создаем функцию, в которой 1-й элемент списка будет равен числу последующих повторяющихся подряд элементов, который будет добавлять 1-цу при данных условиях:
encode([[Count,Elem]|[Elem|[]]])->
   [[Count+1,Elem]];

% делает тоже самое что и первая клоза, только если хвост последнего элемента не "пустой", то выносит хвост в след.список элементов:
encode([[Count,Elem]|[Elem|T]])->
   encode([[Count+1,Elem]|T]);

% если в списке есть еще список с одним элементом, то для второго списка создается 1-ца, а первый при этом остается такой же(он уже обработан первыми двумя клозами):
encode([[Count,Elem1]|[Elem2|[]]])->
   [[Count,Elem1]|[[1,Elem2]]];

% если в списке есть еще список с двумя элементами, то первый список выводим без изменений, так как он уже обработан первыми двумя клозами, дальше создаем функцию, которая добавляет 1-цу в голову списка, а хвост выносим в след.список:
encode([[Count,Elem1]|[Elem2|T]])->
   [[Count,Elem1]|encode([[1,Elem2]|T])];

% если список не пустой и не имеет вложеных списков, то выводим такой же список,только в голову добавляем 1-цу:
encode([H|T])->
   encode([[1,H]|T]);

% если список пустой - выводим пустой список:
encode([])->
   [].


